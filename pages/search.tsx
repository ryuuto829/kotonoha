import Head from 'next/head'
import { useRouter } from 'next/router'
import { useMutation } from '@tanstack/react-query'
import { useEffect, FormEvent } from 'react'
import { WordResult } from '../lib/types'

import { BackspaceIcon, MagnifyingGlassIcon } from '@heroicons/react/24/outline'
import SearchResult from '../components/SearchResult'

export default function Search() {
  const router = useRouter()
  const currentSearchKeyword = router.query.q as string

  const searchResults = useMutation({
    mutationFn: async (keyword: string) => {
      if (!keyword) return null

      const response = await fetch(`/api/search/words?keyword=${keyword}`)
      const { data } = await response.json()

      console.log(data)

      return data as WordResult[]
    }
  })

  useEffect(() => {
    if (currentSearchKeyword) {
      searchResults.mutate(currentSearchKeyword)
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [currentSearchKeyword])

  const handleSearchFormSubmit = (event: FormEvent) => {
    event.preventDefault()

    const formData = new FormData(event.target as HTMLFormElement)
    const searchInput = formData.get('search')

    router.push(`/search?q=${searchInput}`, undefined, { shallow: true })
  }

  return (
    <>
      <Head>
        <title>Search results</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="w-full max-w-2xl mx-auto px-2 py-4 text-gray-200">
        {/* SEARCH FORM */}
        <form onSubmit={handleSearchFormSubmit}>
          <div className="relative">
            <input
              type="text"
              className="block w-full p-2 pr-20 text-base bg-[color:rgb(37,37,37)] rounded"
              placeholder="Search a Japanese or English word"
              name="search"
              required
            />
            <div className="absolute inset-y-0 right-0">
              <button
                type="reset"
                className="p-2 hover:text-red-400 transition"
              >
                <BackspaceIcon className="w-6 h-6" />
              </button>
              <button
                type="submit"
                className="p-2 hover:text-red-400 transition"
              >
                <MagnifyingGlassIcon className="w-6 h-6" />
              </button>
            </div>
          </div>
        </form>

        {/* FILTERS */}
        <div>Words Kanji Radicals</div>

        {searchResults.isLoading && <div>Loading ...</div>}

        {/* SEARCH RESULTS */}
        {searchResults.data &&
          searchResults.data.map((word) => {
            return <SearchResult key={word.slug} word={word} />
          })}
      </main>
    </>
  )
}
